;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(command-history minibuffer-history read-number-history consult-imenu--history empty-history consult--buffer-history buffer-name-history file-name-history consult--grep-history consult--line-history extended-command-history ivy-history))
(setq command-history '((find-file "~/.dotfiles/Emacs/demacs-latest.org" t) (format-all-buffer t) (execute-extended-command nil "format-all-buffer" #("format" 0 6 (face nil))) (find-file "~/Desktop/Test/JS/" t) (dashboard-refresh-buffer) (execute-extended-command nil "dashboard-refresh-buffer" nil) (find-file "~/.dotfiles/Emacs/demacs-stable.org" t) (dashboard-refresh-buffer) (execute-extended-command nil "dashboard-refresh-buffer" nil) (citre-peek-abort) (execute-extended-command nil "citre-peek-abort" nil) (dashboard-refresh-buffer) (execute-extended-command nil "dashboard-refresh-buffer" nil) (find-file "~/Desktop/Test/C/main.c" t) (dashboard-refresh-buffer) (execute-extended-command nil "dashboard-refresh-buffer" nil) (find-file "~/Desktop/Test/C/main.c" t) (dashboard-refresh-buffer) (execute-extended-command nil "dashboard-refresh-buffer" #("rem" 0 3 (face nil))) (company-mode 'toggle) (execute-extended-command nil "company-mode" #("co" 0 2 (face nil))) (doom-modeline-mode 'toggle) (execute-extended-command nil "doom-modeline-mode" #("doo" 0 3 (face nil))) (doom-modeline-mode 'toggle) (execute-extended-command nil "doom-modeline-mode" #("modeline" 0 8 (face nil)))))
(setq minibuffer-history '("prettier" "function/void /Users/desmond/Desktop/Test/support.c(5): void write_extern(void)" "citre-readtags-program"))
(setq consult-imenu--history '("f currnt"))
(setq consult--buffer-history '("*scratch*􀀁" "*Messages*􀀁" "demacs-stable.org􀀁" "*Messages*􀀁" "*dashboard*􀀁" "main.c􀀁" "*dashboard*􀀁" "*scratch*􀀁" "*Messages*􀀁" "main.c􀀁" "*Messages*􀀁" "main.c􀀁" "*dashboard*􀀁" "support.c􀀁" "*Messages*􀀁" "support.c􀀁" "main.c􀀁" "*Messages*􀀁" "*dashboard*􀀁" "*Messages*􀀁" "demacs-latest.org􀀁"))
(setq buffer-name-history '("*scratch*" "*Messages*" "demacs-stable.org" "*Messages*" "*dashboard*" "main.c" "*dashboard*" "*scratch*" "*Messages*" "main.c" "*Messages*" "main.c" "*dashboard*" "support.c" "*Messages*" "support.c" "demacs-latest.org" "main.c" "*Messages*" "*dashboard*" "*Messages*" "demacs-latest.org" "*edit-indirect test_md.md*"))
(setq file-name-history '("~/.dotfiles/Emacs/demacs-latest.org" "~/Desktop/Test/JS/" "~/.dotfiles/Emacs/demacs-stable.org" "~/Desktop/Test/C/main.c" "~/Desktop/Test/main.c" "~/.dotfiles/Emacs/demacs-latest.org" "~/.dotfiles/Emacs/demacs-stable.org" "~/.dotfiles/Emacs/demacs-latest.org" "~/Desktop/Test/test_py.py" "~/Desktop/Test/test_md.md" "~/.dotfiles/Emacs/demacs-latest.org"))
(setq consult--line-history '("doom" "meow inse" "meow inser" "mul" "cus" "citre" "dw/ roo" "cit" "bind ((" "bind" "citre" "meow- ins" "lsp" "citre" "consul" "doom-mod" ";;" "comment" "theme" "switch" "ivy" "ve" "ivy"))
(setq extended-command-history '("format-all-buffer" "dashboard-refresh-buffer" "citre-peek-abort" "dashboard-refresh-buffer" "company-mode" "doom-modeline-mode" "dashboard-refresh-buffer" "citre-mode" "citre-peek-abort" "citre-jump-back" "citre-peek" "citre-jump" "lsp-disconnect" "lsp-mode" "dashboard-refresh-buffer" "company-mode" "citre-mode" "lsp-mode" "describe-variable" "dashboard-refresh-buffer" "consult-history" "dashboard-refresh-buffer" "consult-imenu" "dashboard-refresh-buffer" "straight-remove-unused-repos"))
(setq ivy-history '(#("*edit-indirect test_md.md*" 0 26 (ivy-index 2)) #("test_md.md" 0 10 (ivy-index 2)) #("*Messages*" 0 10 (ivy-index 5)) #("demacs-latest.org" 0 17 (ivy-index 0))))
