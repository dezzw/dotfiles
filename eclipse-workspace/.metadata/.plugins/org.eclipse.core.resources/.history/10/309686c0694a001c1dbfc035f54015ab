package lab09;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

// https://www.baeldung.com/java-md5
public class MD5BreakNumericMT implements Runnable {
	String hash, password;
	int length;
	
	public MD5BreakNumericMT(String hash, int length) {
		this.hash = hash;
		this.length = length;
		this.password = null;
	}
	

	@Override
	public void run() {
		// TODO Auto-generated method stub
		try {
			MessageDigest md = MessageDigest.getInstance("MD5");
			
			int startNum = 0, endNum = (int)Math.pow(10, this.length);
			for(int i=startNum;i<endNum;i++){
				String password = String.format("%04d", i);
				md.reset();
    				md.update(password.getBytes());
				
    				byte[] digest = md.digest();
				String myHash = toHexString(digest);
				// System.out.println(password+" "+hash+" "+myHash);
				if(myHash.equals(hash)) {
					this.password = password;
				}
			}
		} catch (NoSuchAlgorithmException e) {
			// TODO Auto-generated catch block
			System.out.println("Can't find MD5");
		}
	}
	
	// Rewrite the MD5Numeric class to perform same 
	// computation using multithreading
    // Feel free to add other classes as you see fit
	// The console output of this class must be the same as 
	// the console output of the given class
	
	public static String breakMD5(String hash, int length) {
		
		MD5BreakNumericMT m1 = new MD5BreakNumericMT(hash.substring(0, length/2), length/2);
		MD5BreakNumericMT m2 = new MD5BreakNumericMT(hash.substring(length/2, length), length/2);
		
		Thread t1 = new Thread(m1);
		Thread t2 = new Thread(m2);
		
		t1.start();
		t2.start();
		
		try {
			t1.join(); // Wait for the thread to finish
			System.out.println("t1 finished");
			t2.join();
			System.out.println("t2 finished");
		} catch (InterruptedException e) {

		}
		
		String passwd = m1.password + m2.password;
		return passwd;
	}
	
	public static String toHexString(byte[] bytes) {
		StringBuilder hexString = new StringBuilder();
		for (int i = 0; i < bytes.length; i++) {
			String hex = Integer.toHexString(0xFF & bytes[i]);
			if (hex.length() == 1) {
				hexString.append('0');
			}
			hexString.append(hex);
		}
		return hexString.toString();
	}
	
	public static void main(String[] args) {
		System.out.println(breakMD5("da3fde159d754a2555eaa198d2d105b2",4));
	}
	
}
