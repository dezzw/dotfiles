package lab09;

import java.security.MessageDigest;

// https://www.baeldung.com/java-md5
public class MD5BreakNumeric {
	public static void main(String [] args){
		// 4 digit numeric password
		//  echo -n "7723" | md5sum
    		 System.out.println(breakMD5("da3fde159d754a2555eaa198d2d105b2",3));
    		 String has = "da3fde159d754a2555eaa198d2d105b2";
//    		 
//    		 System.out.println(breakMD5(has.substring(0, has.length()/2),2));
//    		 System.out.println(breakMD5("da3fde159d754a2555eaa198d2d105b2",2));
//
//    		 System.out.println(breakMD5("fa246d0262c3925617b0c72bb20eeb1d",4));
//    		 System.out.println(breakMD5("fa246d0262c3925617Z0c72bb20eeb1d",4));
		// echo -n '12345678' | md5sum
//		System.out.println(breakMD5("25d55ad283aa400af464c76d713c07ad",8));
	}
	public static String breakMD5(String hash, int length) {
		try {
    			MessageDigest md = MessageDigest.getInstance("MD5");
			int startNum = 0, endNum = (int)Math.pow(10, length);
			for(int i=startNum;i<endNum;i++){
				String password = String.format("%04d", i);
				md.reset();
    				md.update(password.getBytes());
				
    				byte[] digest = md.digest();
				String myHash = toHexString(digest);
				System.out.println(password+" "+hash+" "+myHash);
				if(myHash.equals(hash))return password;
			}
			return null;
		} catch (Exception e) { System.out.println("Can't find MD5"); }
		return null;
	}
	public static String toHexString(byte[] bytes) {
		StringBuilder hexString = new StringBuilder();
		for (int i = 0; i < bytes.length; i++) {
			String hex = Integer.toHexString(0xFF & bytes[i]);
			if (hex.length() == 1) {
				hexString.append('0');
			}
			hexString.append(hex);
		}
		return hexString.toString();
	}
}
