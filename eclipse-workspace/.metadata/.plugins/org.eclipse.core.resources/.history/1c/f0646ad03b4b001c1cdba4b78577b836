package lab09;

import java.security.MessageDigest;

// https://www.baeldung.com/java-md5
public class MD5BreakNumericMT implements Runnable {
	// Rewrite the MD5Numeric class to perform same
	// computation using multithreading
	// Feel free to add other classes as you see fit
	// The console output of this class must be the same as
	// the console output of the given class
	
	String hash, password;
	long start, end;

	public MD5BreakNumericMT(long start, long end, String hash) {
		this.start = start;
		this.end = end;
		this.hash = hash;
		this.password = null;
	}

	@Override
	public void run() {
		try {
			MessageDigest md = MessageDigest.getInstance("MD5");

			for (long i = this.start; i < this.end; i++) {
				String newPassword = String.format("%04d", i);
				md.reset();
				md.update(newPassword.getBytes());

				byte[] digest = md.digest();
				String myHash = toHexString(digest);
				if (myHash.equals(hash)) {
					this.password = newPassword;
					return;
				}
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			System.out.println("Can't find MD5");
		}
	}

	public static String breakMD5(String hash, int length) {

		int max = (int) Math.pow(10, length);

		MD5BreakNumericMT m1 = new MD5BreakNumericMT(0, max/2, hash);
		MD5BreakNumericMT m2 = new MD5BreakNumericMT(max/2, max, hash);
		
		Thread t1 = new Thread(m1);
		Thread t2 = new Thread(m2);
		
		t1.start();
		t2.start();

		try {
			t1.join();
			t2.join();
			if (m1.password != null) {
				return m1.password;
			} else if (m2.password != null) {
				return m2.password;
			}
		} catch (InterruptedException e) {

		}

		return null;
	}

	public static String toHexString(byte[] bytes) {
		StringBuilder hexString = new StringBuilder();
		for (int i = 0; i < bytes.length; i++) {
			String hex = Integer.toHexString(0xFF & bytes[i]);
			if (hex.length() == 1) {
				hexString.append('0');
			}
			hexString.append(hex);
		}
		return hexString.toString();
	}

	public static void main(String[] args) {	
//		System.out.println(breakMD5MT("da3fde159d754a2555eaa198d2d105b2", 4));
		System.out.println(breakMD5("25d55ad283aa400af464c76d713c07ad",8));
	}
}
