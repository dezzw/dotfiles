package lab05;

import java.util.*;

public class StockService extends Observable{

	private List<Observer> traders;
	private HashMap<String, Double> stocks;
	
	public StockService() {
		this.traders = new ArrayList<>();
		this.stocks = new HashMap<>();
		
		this.setObservableState(false);
	}
	
	@Override
	public void register(Observer o) {
		if (this.traders.indexOf(o) == -1) {
			this.traders.add(o);
		}
	}

	@Override
	public void unregister(Observer o) {
		int index = this.traders.indexOf(o);
		if (index >= 0) {
			this.traders.remove(index);
		}
	}

	@Override
	public void notifyObserver() {
		if (this.getObservableState()) {
			for (Observer trader : this.traders) {
				trader.update();
			}
			this.setObservableState(false);
		}
	}
	
	public void addPrice(String stockName, double price) {
		
		if (this.stocks.containsKey(stockName)) {
			this.stocks.replace(stockName, price);
		} else {
			this.stocks.put(stockName, price);
		}
		
		this.setObservableState(true);
	}
	
	public HashMap<String, Double> getStocks() {
		return this.stocks.;
	}

}
