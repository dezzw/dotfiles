package lab05;

import java.util.*;

public class StockService extends Observable{

	private List<Observer> traders;
	private List<String[]> stocks;
	private String[] stockInfo;
	
	public StockService() {
		this.traders = new ArrayList<>();
		this.stocks = new ArrayList<>();
		
		this.setObservableState(false);
	}
	
	@Override
	public void register(Observer o) {
		if (this.traders.indexOf(o) == -1) {
			this.traders.add(o);
		}
	}

	@Override
	public void unregister(Observer o) {
		int index = this.traders.indexOf(o);
		if (index >= 0) {
			this.traders.remove(index);
		}
	}

	@Override
	public void notifyObserver() {
		if (this.getObservableState()) {
			for (Observer trader : this.traders) {
				trader.update();
			}
			this.setObservableState(false);
		}
	}
	
	public void addPrice(String stockName, double price) {
		boolean isContain = true;
		this.stockInfo = new String[2];
		this.stockInfo[0] = stockName;
		this.stockInfo[1] = Double.toString(price);
		for (String[] info : this.stocks) {
			if (info[0].equals(stockName)) {
				info[1] = Double.toString(price);
				isContain = false;
			}
		}
		
		if (!isContain) {
			this.stocks.add(stockInfo);
		}
		
		this.setObservableState(true);
	}
	
	public String[] getStockInfo() {
		return this.stockInfo;
	}

}
