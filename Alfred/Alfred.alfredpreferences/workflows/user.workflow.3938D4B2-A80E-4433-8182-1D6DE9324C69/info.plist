<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.machineclean</string>
	<key>category</key>
	<string>Tools</string>
	<key>connections</key>
	<dict>
		<key>5E281C93-A16E-4148-9C7B-0E4CA2276285</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>FAD30B1C-1909-4F9C-87E9-AEEE5C427502</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>7CC0213F-BC65-43B3-9675-BBA23E04881C</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>36D260D9-DD1B-4AE7-953C-732219953B72</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>D9245730-36BC-415E-BF86-FB40B9A7A25F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>73DB8141-C82A-4410-806E-EA01F0541D64</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>7CC0213F-BC65-43B3-9675-BBA23E04881C</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>FAD30B1C-1909-4F9C-87E9-AEEE5C427502</key>
		<array/>
		<key>FED5D171-D581-4C00-9172-DD195380AC73</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>D9245730-36BC-415E-BF86-FB40B9A7A25F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Lock your keyboard temporarily, so you can clean it</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>MachineClean</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/${alfred_workflow_name}.alfredworkflow"
readonly download_type='direct'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type f -name 'notificator')"

  if [[ -f "${notificator}" &amp;&amp; "$(/usr/bin/file --brief --mime-type "${notificator}")" == 'text/x-shellscript' ]]; then
    "${notificator}" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  # Remote sanity check
  if ! url_exists "${remote_info_plist}"; then
    abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."
  fi

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"
  rm "${tmp_file}"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  readonly download_url="$(
    if [[ "${download_type}" == 'github_release' ]]; then
      osascript -l JavaScript -e 'function run(argv) { return JSON.parse(argv[0])["assets"].find(asset =&gt; asset["browser_download_url"].endsWith(".alfredworkflow"))["browser_download_url"] }' "$(curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest")"
    else
      echo "${workflow_url}"
    fi
  )"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    readonly download_name="$(basename "${download_url}")"
    curl --silent --location --output "${HOME}/Downloads/${download_name}" "${download_url}"
    open "${HOME}/Downloads/${download_name}"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>73DB8141-C82A-4410-806E-EA01F0541D64</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>macclean</string>
				<key>subtext</key>
				<string>Will lock keyboard for {var:seconds_to_lock} seconds</string>
				<key>text</key>
				<string>MachineClean</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>FED5D171-D581-4C00-9172-DD195380AC73</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>function notification {
  ./notificator --message "${1}" --title "${alfred_workflow_name}"
}

# Abort if `seconds_to_lock` is unset or not an interger
if [[ -z "${seconds_to_lock}" || ! "${seconds_to_lock}" =~ ^[0-9]+$ ]]; then
  echo 'Lock time in the Workflow Environment Variables is not a full number' &gt;&amp;2
  exit 1
fi

keyboard="$(kextstat | grep --ignore-case 'keyboard' | head -1 | awk '{ print $6 }')"

# Abort if on unsupported keyboard
if [[ "${keyboard}" == *'AppleHIDKeyboard'* ]]; then
  notification 'This Workflow will not work on your type of keyboard'
  open 'https://github.com/vitorgalvao/alfred-workflows/issues/19'
  exit 1
fi

osascript &lt;&lt; EOS
  # We have to run the 'osascript' inside the 'osascript' because otherwise times will not coincide. Running a command with 'with administrator privileges' does not stall execution of the rest of the script, meaning the subsequent commands would run before their time

  do shell script "kextunload -bundle-id ${keyboard} ; osascript -e 'tell application id \"com.runningwithcrayons.Alfred\" to run trigger \"show_timer\" in workflow \"com.vitorgalvao.alfred.machineclean\"' ; sleep ${seconds_to_lock} ; kextload -bundle-id ${keyboard}" with administrator privileges
EOS

notification 'Keyboard unlocked'</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>D9245730-36BC-415E-BF86-FB40B9A7A25F</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># Restart BetterTouchTool, if it is running
if application "BetterTouchTool" is running then
  tell application "BetterTouchTool"
    quit
    delay 2
    activate
  end tell
end if</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>6</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>36D260D9-DD1B-4AE7-953C-732219953B72</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>triggerid</key>
				<string>show_timer</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.external</string>
			<key>uid</key>
			<string>5E281C93-A16E-4148-9C7B-0E4CA2276285</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>script</key>
				<string># Abort if `seconds_to_lock` is unset or not an interger
if [[ -z "${seconds_to_lock}" || ! "${seconds_to_lock}" =~ ^[0-9]+$ ]]; then
  echo 'Lock time in the Workflow Environment Variables is not a full number' &gt;&amp;2
  exit 1
fi

[[ "${seconds_to_lock}" -le 0 ]] &amp;&amp; exit 0

cat &lt;&lt; EOB
  {
    "rerun" : 1,

    "variables": {
      "seconds_to_lock": "$(bc &lt;&lt;&lt; "${seconds_to_lock} - 1")"
    },

    "items": [{
      "title": "MachineClean",
      "subtitle": "Unlocking in ${seconds_to_lock} seconds",
      "icon": "icon.png"
    }]
  }
EOB</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>FAD30B1C-1909-4F9C-87E9-AEEE5C427502</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict/>
			<key>type</key>
			<string>alfred.workflow.utility.hidealfred</string>
			<key>uid</key>
			<string>7CC0213F-BC65-43B3-9675-BBA23E04881C</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Call `macclean` and your keyboard will be temporarily locked (for `seconds_to_lock` in the Workflow Environment Variables) so you can clean it at will without messing what you’re doing.

![](https://i.imgur.com/6iwuA38.png)

The workflow will give you a timer of how many seconds are left to unlock and a notification when it’s done.

You will be asked for your password when locking since this operation requires elevated privileges (which is a good thing). Do keep in mind that if something goes wrong in the process you may need to forcefully restart your machine. That is very unlikely and I’ve been using this for quite some time without any issues, but you should be aware of it.</string>
	<key>uidata</key>
	<dict>
		<key>36D260D9-DD1B-4AE7-953C-732219953B72</key>
		<dict>
			<key>note</key>
			<string>We do this here instead of in the main `Run Script` so there’s no delay in hiding Alfred</string>
			<key>xpos</key>
			<integer>610</integer>
			<key>ypos</key>
			<integer>170</integer>
		</dict>
		<key>5E281C93-A16E-4148-9C7B-0E4CA2276285</key>
		<dict>
			<key>xpos</key>
			<integer>30</integer>
			<key>ypos</key>
			<integer>170</integer>
		</dict>
		<key>73DB8141-C82A-4410-806E-EA01F0541D64</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>610</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
		<key>7CC0213F-BC65-43B3-9675-BBA23E04881C</key>
		<dict>
			<key>xpos</key>
			<integer>510</integer>
			<key>ypos</key>
			<integer>200</integer>
		</dict>
		<key>D9245730-36BC-415E-BF86-FB40B9A7A25F</key>
		<dict>
			<key>xpos</key>
			<integer>320</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
		<key>FAD30B1C-1909-4F9C-87E9-AEEE5C427502</key>
		<dict>
			<key>xpos</key>
			<integer>320</integer>
			<key>ypos</key>
			<integer>170</integer>
		</dict>
		<key>FED5D171-D581-4C00-9172-DD195380AC73</key>
		<dict>
			<key>xpos</key>
			<integer>30</integer>
			<key>ypos</key>
			<integer>20</integer>
		</dict>
	</dict>
	<key>variables</key>
	<dict>
		<key>seconds_to_lock</key>
		<string>30</string>
	</dict>
	<key>version</key>
	<string>22.1</string>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
