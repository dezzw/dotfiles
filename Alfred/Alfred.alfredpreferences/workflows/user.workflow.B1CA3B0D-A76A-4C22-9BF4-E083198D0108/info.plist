<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.coffeecoffee</string>
	<key>category</key>
	<string>Tools</string>
	<key>connections</key>
	<dict>
		<key>0B01601F-72A7-4C92-8B67-197D677D2A12</key>
		<array/>
		<key>208D10C7-CBD8-47D1-8A1F-66ED2C76BEF4</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>0B01601F-72A7-4C92-8B67-197D677D2A12</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>8BFD2E03-38C3-46B3-8353-99A41F55A0BD</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>6A13300D-DEB5-4476-9E16-693114781152</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>208D10C7-CBD8-47D1-8A1F-66ED2C76BEF4</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>94757117-A2E1-4FE7-A171-555588BE76FF</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>A5523421-FAE4-48C5-BEDD-9DEF7743DDF6</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>6A13300D-DEB5-4476-9E16-693114781152</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string>Also prevent the display from going to sleep</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>A5523421-FAE4-48C5-BEDD-9DEF7743DDF6</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>208D10C7-CBD8-47D1-8A1F-66ED2C76BEF4</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Prevent your computer from going to sleep</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>CoffeeCoffee</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>coffee</string>
				<key>queuedelaycustom</key>
				<integer>1</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Please wait…</string>
				<key>script</key>
				<string>require 'json'

script_filter_items = []

if system('/usr/bin/pgrep', '-f', 'coffeecoffee_process_anchor', out: File::NULL)
  Turn_off_time = File.read("#{ENV['alfred_workflow_cache']}/auto_turn_off_at.txt").chomp rescue nil
  Subtitle = Turn_off_time.nil? ? 'Let your computer go to sleep as usual' : "Set to auto turn off at around #{Turn_off_time}"

  script_filter_items.push(
    title: 'Turn it off',
    subtitle: Subtitle,
    arg: 'off',
    icon: { path: 'icon_alt.png' }
  )
else
  Given_timeout = ARGV[0]

  if Given_timeout.nil? || !Given_timeout.match(/^\d/) # Any given value must start with a digit
    script_filter_items.push(
      title: 'Turn it on',
      subtitle: 'Prevent your computer from going to sleep indefinitely',
      arg: 'coffeecoffee_process_anchor on'
    )
  else
    Timeout_seconds = case Given_timeout
                      when /\d\s*s/ then Given_timeout.to_i
                      when /\d\s*m/ then (Given_timeout.to_f * 60).to_i
                      when /\d\s*h/ then (Given_timeout.to_f * 60 * 60).to_i
                      else (Given_timeout.to_f * 60).to_i # Default to minutes
                      end

    Timeout_minutes = Timeout_seconds / 60
    plurality = Timeout_minutes == 1 ? 'minute' : 'minutes'

    script_filter_items.push(
      title: 'Turn it on',
      subtitle: "Prevent your computer from going to sleep for #{Timeout_minutes} #{plurality}",
      arg: "coffeecoffee_process_anchor #{Timeout_seconds}"
    )
  end
end

puts({ items: script_filter_items }.to_json)</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Prevent your computer from going to sleep</string>
				<key>title</key>
				<string>CoffeeCoffee</string>
				<key>type</key>
				<integer>2</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>94757117-A2E1-4FE7-A171-555588BE76FF</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<true/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>readonly arg="${1#coffeecoffee_process_anchor }" # Remove anchor and keep argument
readonly turn_off_file="${alfred_workflow_cache}/auto_turn_off_at.txt"

trap '[[ -f "${turn_off_file}" ]] &amp;&amp; rm "${turn_off_file}"' EXIT

# Turn off
if [[ "${arg}" == 'off' ]]; then
  readonly pgid="$(/usr/bin/pgrep -f 'coffeecoffee_process_anchor')"
  kill -- -"${pgid}"
  exit 0
fi

# Turn on
if [[ "${arg}" =~ ^[0-9]+$ ]]; then
  readonly timeout=('-t' "${arg}")

  mkdir -p "${alfred_workflow_cache}"
  date -v "+${arg}S" '+%H:%M' &gt; "${turn_off_file}"
else
  readonly timeout=()
fi

if [[ "${prevent_display_sleep}" == 'true' ]]; then
  readonly display=(-d)
else
  readonly display=()
fi

/usr/bin/caffeinate "${timeout[@]}" "${display[@]}"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>5</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>0B01601F-72A7-4C92-8B67-197D677D2A12</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>{query}</string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>prevent_display_sleep</key>
					<string>false</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>A5523421-FAE4-48C5-BEDD-9DEF7743DDF6</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict/>
			<key>type</key>
			<string>alfred.workflow.utility.junction</string>
			<key>uid</key>
			<string>208D10C7-CBD8-47D1-8A1F-66ED2C76BEF4</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/${alfred_workflow_name}.alfredworkflow"
readonly download_type='direct'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  local -r terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>8BFD2E03-38C3-46B3-8353-99A41F55A0BD</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>{query}</string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>prevent_display_sleep</key>
					<string>true</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>6A13300D-DEB5-4476-9E16-693114781152</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Prevent your computer from going to sleep.

Type `coffee` to turn it on. Action with ⌘ to also prevent the display from going to sleep.

![](https://i.imgur.com/GSUCRr4.png)

Give a value and it’ll be active for that amount of time. It defaults to minutes but understands seconds and hours.

![](https://i.imgur.com/lrTcwSa.png)

Run `coffee` again to manually turn it off.

![](https://i.imgur.com/d9NqISv.png)</string>
	<key>uidata</key>
	<dict>
		<key>0B01601F-72A7-4C92-8B67-197D677D2A12</key>
		<dict>
			<key>xpos</key>
			<integer>460</integer>
			<key>ypos</key>
			<integer>30</integer>
		</dict>
		<key>208D10C7-CBD8-47D1-8A1F-66ED2C76BEF4</key>
		<dict>
			<key>xpos</key>
			<integer>370</integer>
			<key>ypos</key>
			<integer>120</integer>
		</dict>
		<key>6A13300D-DEB5-4476-9E16-693114781152</key>
		<dict>
			<key>note</key>
			<string>Display will not turn off</string>
			<key>xpos</key>
			<integer>260</integer>
			<key>ypos</key>
			<integer>180</integer>
		</dict>
		<key>8BFD2E03-38C3-46B3-8353-99A41F55A0BD</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>460</integer>
			<key>ypos</key>
			<integer>150</integer>
		</dict>
		<key>94757117-A2E1-4FE7-A171-555588BE76FF</key>
		<dict>
			<key>xpos</key>
			<integer>40</integer>
			<key>ypos</key>
			<integer>30</integer>
		</dict>
		<key>A5523421-FAE4-48C5-BEDD-9DEF7743DDF6</key>
		<dict>
			<key>note</key>
			<string>Display can turn off</string>
			<key>xpos</key>
			<integer>260</integer>
			<key>ypos</key>
			<integer>60</integer>
		</dict>
	</dict>
	<key>version</key>
	<string>22.1</string>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
